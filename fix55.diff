diff --git a/src-db/database/sourcedata/ETAPI_OPENAPI_FLOW.xml b/src-db/database/sourcedata/ETAPI_OPENAPI_FLOW.xml
index 7be0c97..176aa38 100644
--- a/src-db/database/sourcedata/ETAPI_OPENAPI_FLOW.xml
+++ b/src-db/database/sourcedata/ETAPI_OPENAPI_FLOW.xml
@@ -73,7 +73,7 @@
 <!--CF5541C2A8574BB2B0E998E3FA48384E-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
 <!--CF5541C2A8574BB2B0E998E3FA48384E-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
 <!--CF5541C2A8574BB2B0E998E3FA48384E-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--CF5541C2A8574BB2B0E998E3FA48384E-->  <NAME><![CDATA[Windows, Tabs and File Agent Flow]]></NAME>
+<!--CF5541C2A8574BB2B0E998E3FA48384E-->  <NAME><![CDATA[Windows, Tabs and Fields Agent Flow]]></NAME>
 <!--CF5541C2A8574BB2B0E998E3FA48384E-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
 <!--CF5541C2A8574BB2B0E998E3FA48384E--></ETAPI_OPENAPI_FLOW>
 
diff --git a/src-db/database/sourcedata/ETAPI_OPENAPI_FLOWPOINT.xml b/src-db/database/sourcedata/ETAPI_OPENAPI_FLOWPOINT.xml
index feacd83..ec057c4 100644
--- a/src-db/database/sourcedata/ETAPI_OPENAPI_FLOWPOINT.xml
+++ b/src-db/database/sourcedata/ETAPI_OPENAPI_FLOWPOINT.xml
@@ -70,20 +70,6 @@
 <!--127BFDDA87444B1395A046D6E2E8D9D8-->  <POST><![CDATA[Y]]></POST>
 <!--127BFDDA87444B1395A046D6E2E8D9D8--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--130CF98C4A9A4F1AB12D1A6180502B22--><ETAPI_OPENAPI_FLOWPOINT>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[130CF98C4A9A4F1AB12D1A6180502B22]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[2ADF644AA2074F48BE8837B57CA40C31]]></ETAPI_OPENAPI_REQ_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <GET><![CDATA[Y]]></GET>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <PUT><![CDATA[Y]]></PUT>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--130CF98C4A9A4F1AB12D1A6180502B22-->  <POST><![CDATA[N]]></POST>
-<!--130CF98C4A9A4F1AB12D1A6180502B22--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--14E65D102DE84B8D9A8D2F390C777735--><ETAPI_OPENAPI_FLOWPOINT>
 <!--14E65D102DE84B8D9A8D2F390C777735-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[14E65D102DE84B8D9A8D2F390C777735]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--14E65D102DE84B8D9A8D2F390C777735-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -140,34 +126,6 @@
 <!--1A6D7BC9942D40C295E72D7B0C8241FF-->  <POST><![CDATA[Y]]></POST>
 <!--1A6D7BC9942D40C295E72D7B0C8241FF--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--2222860E829049A18B5AEF5F36D3A081--><ETAPI_OPENAPI_FLOWPOINT>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[2222860E829049A18B5AEF5F36D3A081]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[56D0A51212774CC4A939F11AC14EF444]]></ETAPI_OPENAPI_REQ_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <GET><![CDATA[N]]></GET>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <PUT><![CDATA[N]]></PUT>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <GETBYID><![CDATA[N]]></GETBYID>
-<!--2222860E829049A18B5AEF5F36D3A081-->  <POST><![CDATA[Y]]></POST>
-<!--2222860E829049A18B5AEF5F36D3A081--></ETAPI_OPENAPI_FLOWPOINT>
-
-<!--25FA4CFDD7CB47EC94094891CCEC21FC--><ETAPI_OPENAPI_FLOWPOINT>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[25FA4CFDD7CB47EC94094891CCEC21FC]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[B642096A05EA44969452FBC29D432207]]></ETAPI_OPENAPI_REQ_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <GET><![CDATA[Y]]></GET>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <PUT><![CDATA[Y]]></PUT>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC-->  <POST><![CDATA[Y]]></POST>
-<!--25FA4CFDD7CB47EC94094891CCEC21FC--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--27199254B0B14F7DB7B2F48F3EF57ACB--><ETAPI_OPENAPI_FLOWPOINT>
 <!--27199254B0B14F7DB7B2F48F3EF57ACB-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[27199254B0B14F7DB7B2F48F3EF57ACB]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--27199254B0B14F7DB7B2F48F3EF57ACB-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -224,19 +182,19 @@
 <!--2C3F24A9DF864586A1AE6CB657D8E0ED-->  <POST><![CDATA[Y]]></POST>
 <!--2C3F24A9DF864586A1AE6CB657D8E0ED--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F--><ETAPI_OPENAPI_FLOWPOINT>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[33DFFE9D3DD54E36BEE1AF185FAB7F3F]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[02B9A7AB38FA466AA249F56AD97131DE]]></ETAPI_OPENAPI_REQ_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <GET><![CDATA[Y]]></GET>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <PUT><![CDATA[Y]]></PUT>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F-->  <POST><![CDATA[Y]]></POST>
-<!--33DFFE9D3DD54E36BEE1AF185FAB7F3F--></ETAPI_OPENAPI_FLOWPOINT>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743--><ETAPI_OPENAPI_FLOWPOINT>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[2F2EEC3D1A7748E98963FC18F1F5C743]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[B5F2C4DC31B24E42BE93BF8C4AD2E13F]]></ETAPI_OPENAPI_FLOW_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[19953B36114747CF91B38DFA358741FE]]></ETAPI_OPENAPI_REQ_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <GET><![CDATA[N]]></GET>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <PUT><![CDATA[N]]></PUT>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743-->  <POST><![CDATA[Y]]></POST>
+<!--2F2EEC3D1A7748E98963FC18F1F5C743--></ETAPI_OPENAPI_FLOWPOINT>
 
 <!--36BA6C621FB2491A92ACEC9BA279782C--><ETAPI_OPENAPI_FLOWPOINT>
 <!--36BA6C621FB2491A92ACEC9BA279782C-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[36BA6C621FB2491A92ACEC9BA279782C]]></ETAPI_OPENAPI_FLOWPOINT_ID>
@@ -252,48 +210,6 @@
 <!--36BA6C621FB2491A92ACEC9BA279782C-->  <POST><![CDATA[N]]></POST>
 <!--36BA6C621FB2491A92ACEC9BA279782C--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--442201B9EE3E469FB1BDF96B1F6F626B--><ETAPI_OPENAPI_FLOWPOINT>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[442201B9EE3E469FB1BDF96B1F6F626B]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[4C54F12A79564A04AB90A267E4F4895A]]></ETAPI_OPENAPI_REQ_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <GET><![CDATA[N]]></GET>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <PUT><![CDATA[N]]></PUT>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <GETBYID><![CDATA[N]]></GETBYID>
-<!--442201B9EE3E469FB1BDF96B1F6F626B-->  <POST><![CDATA[Y]]></POST>
-<!--442201B9EE3E469FB1BDF96B1F6F626B--></ETAPI_OPENAPI_FLOWPOINT>
-
-<!--443107E7F71A47F6A46BD626DB14898F--><ETAPI_OPENAPI_FLOWPOINT>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[443107E7F71A47F6A46BD626DB14898F]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[68273101836A45259289907FC6B4CB24]]></ETAPI_OPENAPI_REQ_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <GET><![CDATA[Y]]></GET>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <PUT><![CDATA[Y]]></PUT>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--443107E7F71A47F6A46BD626DB14898F-->  <POST><![CDATA[Y]]></POST>
-<!--443107E7F71A47F6A46BD626DB14898F--></ETAPI_OPENAPI_FLOWPOINT>
-
-<!--46B304732ECB4694BDCB61750ACC4039--><ETAPI_OPENAPI_FLOWPOINT>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[46B304732ECB4694BDCB61750ACC4039]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[8EC00FC1E1A04432B5823D52E5316E8B]]></ETAPI_OPENAPI_REQ_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <GET><![CDATA[Y]]></GET>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <PUT><![CDATA[Y]]></PUT>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--46B304732ECB4694BDCB61750ACC4039-->  <POST><![CDATA[Y]]></POST>
-<!--46B304732ECB4694BDCB61750ACC4039--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--4C93101C4C3C488C85D69304E520467E--><ETAPI_OPENAPI_FLOWPOINT>
 <!--4C93101C4C3C488C85D69304E520467E-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[4C93101C4C3C488C85D69304E520467E]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--4C93101C4C3C488C85D69304E520467E-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -308,19 +224,19 @@
 <!--4C93101C4C3C488C85D69304E520467E-->  <POST><![CDATA[N]]></POST>
 <!--4C93101C4C3C488C85D69304E520467E--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5--><ETAPI_OPENAPI_FLOWPOINT>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[4F0CD8804CE444AFA0DDE6FB8689F5E5]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[1E9C55A41DB444A19D476B71B6461244]]></ETAPI_OPENAPI_REQ_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <GET><![CDATA[Y]]></GET>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <PUT><![CDATA[Y]]></PUT>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5-->  <POST><![CDATA[Y]]></POST>
-<!--4F0CD8804CE444AFA0DDE6FB8689F5E5--></ETAPI_OPENAPI_FLOWPOINT>
+<!--4D19C578548347DC9AEF7102222611B2--><ETAPI_OPENAPI_FLOWPOINT>
+<!--4D19C578548347DC9AEF7102222611B2-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[4D19C578548347DC9AEF7102222611B2]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--4D19C578548347DC9AEF7102222611B2-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[B5F2C4DC31B24E42BE93BF8C4AD2E13F]]></ETAPI_OPENAPI_FLOW_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[A9BCF1993ABF4141B469A36FE4B41836]]></ETAPI_OPENAPI_REQ_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <GET><![CDATA[N]]></GET>
+<!--4D19C578548347DC9AEF7102222611B2-->  <PUT><![CDATA[N]]></PUT>
+<!--4D19C578548347DC9AEF7102222611B2-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--4D19C578548347DC9AEF7102222611B2-->  <POST><![CDATA[Y]]></POST>
+<!--4D19C578548347DC9AEF7102222611B2--></ETAPI_OPENAPI_FLOWPOINT>
 
 <!--5271BC46D116474A95A81B68E8A6DC7B--><ETAPI_OPENAPI_FLOWPOINT>
 <!--5271BC46D116474A95A81B68E8A6DC7B-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[5271BC46D116474A95A81B68E8A6DC7B]]></ETAPI_OPENAPI_FLOWPOINT_ID>
@@ -434,6 +350,20 @@
 <!--6EBD0BCA3DA7430FB63FF3E384C70C8F-->  <POST><![CDATA[Y]]></POST>
 <!--6EBD0BCA3DA7430FB63FF3E384C70C8F--></ETAPI_OPENAPI_FLOWPOINT>
 
+<!--745B139A550F484189A112EB56FBFA38--><ETAPI_OPENAPI_FLOWPOINT>
+<!--745B139A550F484189A112EB56FBFA38-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[745B139A550F484189A112EB56FBFA38]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--745B139A550F484189A112EB56FBFA38-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[77745A18E93D436A939515FAEB95E0F8]]></ETAPI_OPENAPI_REQ_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--745B139A550F484189A112EB56FBFA38-->  <GET><![CDATA[N]]></GET>
+<!--745B139A550F484189A112EB56FBFA38-->  <PUT><![CDATA[Y]]></PUT>
+<!--745B139A550F484189A112EB56FBFA38-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--745B139A550F484189A112EB56FBFA38-->  <POST><![CDATA[Y]]></POST>
+<!--745B139A550F484189A112EB56FBFA38--></ETAPI_OPENAPI_FLOWPOINT>
+
 <!--74842DB981A54BA683161E92F14EE2EC--><ETAPI_OPENAPI_FLOWPOINT>
 <!--74842DB981A54BA683161E92F14EE2EC-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[74842DB981A54BA683161E92F14EE2EC]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--74842DB981A54BA683161E92F14EE2EC-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -448,20 +378,6 @@
 <!--74842DB981A54BA683161E92F14EE2EC-->  <POST><![CDATA[Y]]></POST>
 <!--74842DB981A54BA683161E92F14EE2EC--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--766B97DCE71E4866BC21BFE69DD98C6A--><ETAPI_OPENAPI_FLOWPOINT>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[766B97DCE71E4866BC21BFE69DD98C6A]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[03946B5B81A54655B070F84785A42902]]></ETAPI_OPENAPI_REQ_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <GET><![CDATA[Y]]></GET>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <PUT><![CDATA[Y]]></PUT>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--766B97DCE71E4866BC21BFE69DD98C6A-->  <POST><![CDATA[N]]></POST>
-<!--766B97DCE71E4866BC21BFE69DD98C6A--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--773B3F934A85405AAAF6D82026CCB16C--><ETAPI_OPENAPI_FLOWPOINT>
 <!--773B3F934A85405AAAF6D82026CCB16C-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[773B3F934A85405AAAF6D82026CCB16C]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--773B3F934A85405AAAF6D82026CCB16C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -476,20 +392,6 @@
 <!--773B3F934A85405AAAF6D82026CCB16C-->  <POST><![CDATA[Y]]></POST>
 <!--773B3F934A85405AAAF6D82026CCB16C--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--79D0C3AF34FE41B3B606D2BDECF3928E--><ETAPI_OPENAPI_FLOWPOINT>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[79D0C3AF34FE41B3B606D2BDECF3928E]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[F73995961FE945D99F860BAC90FDDFA0]]></ETAPI_OPENAPI_REQ_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <GET><![CDATA[Y]]></GET>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <PUT><![CDATA[N]]></PUT>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E-->  <POST><![CDATA[Y]]></POST>
-<!--79D0C3AF34FE41B3B606D2BDECF3928E--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--7B8764DD6B7249A8A1E390E85E6C437D--><ETAPI_OPENAPI_FLOWPOINT>
 <!--7B8764DD6B7249A8A1E390E85E6C437D-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[7B8764DD6B7249A8A1E390E85E6C437D]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--7B8764DD6B7249A8A1E390E85E6C437D-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -518,6 +420,20 @@
 <!--81F6C66910394A71873787514AD78A27-->  <POST><![CDATA[N]]></POST>
 <!--81F6C66910394A71873787514AD78A27--></ETAPI_OPENAPI_FLOWPOINT>
 
+<!--87BFB8B241134D12B1D683878CA0F73D--><ETAPI_OPENAPI_FLOWPOINT>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[87BFB8B241134D12B1D683878CA0F73D]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[4C54F12A79564A04AB90A267E4F4895A]]></ETAPI_OPENAPI_REQ_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <GET><![CDATA[N]]></GET>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <PUT><![CDATA[N]]></PUT>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--87BFB8B241134D12B1D683878CA0F73D-->  <POST><![CDATA[Y]]></POST>
+<!--87BFB8B241134D12B1D683878CA0F73D--></ETAPI_OPENAPI_FLOWPOINT>
+
 <!--8FFD8BB9952E4F6D90C219B180D57EFF--><ETAPI_OPENAPI_FLOWPOINT>
 <!--8FFD8BB9952E4F6D90C219B180D57EFF-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[8FFD8BB9952E4F6D90C219B180D57EFF]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--8FFD8BB9952E4F6D90C219B180D57EFF-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -560,20 +476,6 @@
 <!--996165B4A79342ACA39500FEE8F2C23B-->  <POST><![CDATA[N]]></POST>
 <!--996165B4A79342ACA39500FEE8F2C23B--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--A06269645E154CB9815DE1EB529B58C3--><ETAPI_OPENAPI_FLOWPOINT>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[A06269645E154CB9815DE1EB529B58C3]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[CCB9A32732B14FAE9CA0B9F98A0444BD]]></ETAPI_OPENAPI_REQ_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <GET><![CDATA[Y]]></GET>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <PUT><![CDATA[N]]></PUT>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--A06269645E154CB9815DE1EB529B58C3-->  <POST><![CDATA[N]]></POST>
-<!--A06269645E154CB9815DE1EB529B58C3--></ETAPI_OPENAPI_FLOWPOINT>
-
 <!--A6A3EB497B114DE6A587E3F47073C1E1--><ETAPI_OPENAPI_FLOWPOINT>
 <!--A6A3EB497B114DE6A587E3F47073C1E1-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[A6A3EB497B114DE6A587E3F47073C1E1]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--A6A3EB497B114DE6A587E3F47073C1E1-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -588,6 +490,20 @@
 <!--A6A3EB497B114DE6A587E3F47073C1E1-->  <POST><![CDATA[Y]]></POST>
 <!--A6A3EB497B114DE6A587E3F47073C1E1--></ETAPI_OPENAPI_FLOWPOINT>
 
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1--><ETAPI_OPENAPI_FLOWPOINT>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[AA7DBC22C1794C14B158D8D88A5AFEF1]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[ED4960B25FF34E6CB0B2E760D58D6990]]></ETAPI_OPENAPI_REQ_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <GET><![CDATA[N]]></GET>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <PUT><![CDATA[N]]></PUT>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1-->  <POST><![CDATA[Y]]></POST>
+<!--AA7DBC22C1794C14B158D8D88A5AFEF1--></ETAPI_OPENAPI_FLOWPOINT>
+
 <!--AEEC82AF2155455BAB767D8254C2FE8C--><ETAPI_OPENAPI_FLOWPOINT>
 <!--AEEC82AF2155455BAB767D8254C2FE8C-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[AEEC82AF2155455BAB767D8254C2FE8C]]></ETAPI_OPENAPI_FLOWPOINT_ID>
 <!--AEEC82AF2155455BAB767D8254C2FE8C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -616,19 +532,19 @@
 <!--BA1715133B2642189079DFE559624900-->  <POST><![CDATA[Y]]></POST>
 <!--BA1715133B2642189079DFE559624900--></ETAPI_OPENAPI_FLOWPOINT>
 
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92--><ETAPI_OPENAPI_FLOWPOINT>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[C683C8E6B8414CAAA5FE4A4179A1FF92]]></ETAPI_OPENAPI_FLOWPOINT_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[CF5541C2A8574BB2B0E998E3FA48384E]]></ETAPI_OPENAPI_FLOW_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[CC764636C21C4310B5A5616F51C00004]]></ETAPI_OPENAPI_REQ_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <GET><![CDATA[Y]]></GET>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <PUT><![CDATA[Y]]></PUT>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <GETBYID><![CDATA[Y]]></GETBYID>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92-->  <POST><![CDATA[N]]></POST>
-<!--C683C8E6B8414CAAA5FE4A4179A1FF92--></ETAPI_OPENAPI_FLOWPOINT>
+<!--C2744518426947C38CF61AF59FE27304--><ETAPI_OPENAPI_FLOWPOINT>
+<!--C2744518426947C38CF61AF59FE27304-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[C2744518426947C38CF61AF59FE27304]]></ETAPI_OPENAPI_FLOWPOINT_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--C2744518426947C38CF61AF59FE27304-->  <ETAPI_OPENAPI_FLOW_ID><![CDATA[B5F2C4DC31B24E42BE93BF8C4AD2E13F]]></ETAPI_OPENAPI_FLOW_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[77745A18E93D436A939515FAEB95E0F8]]></ETAPI_OPENAPI_REQ_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--C2744518426947C38CF61AF59FE27304-->  <GET><![CDATA[N]]></GET>
+<!--C2744518426947C38CF61AF59FE27304-->  <PUT><![CDATA[N]]></PUT>
+<!--C2744518426947C38CF61AF59FE27304-->  <GETBYID><![CDATA[N]]></GETBYID>
+<!--C2744518426947C38CF61AF59FE27304-->  <POST><![CDATA[Y]]></POST>
+<!--C2744518426947C38CF61AF59FE27304--></ETAPI_OPENAPI_FLOWPOINT>
 
 <!--C9F5D943DA6642E39D5EE855F2348FF2--><ETAPI_OPENAPI_FLOWPOINT>
 <!--C9F5D943DA6642E39D5EE855F2348FF2-->  <ETAPI_OPENAPI_FLOWPOINT_ID><![CDATA[C9F5D943DA6642E39D5EE855F2348FF2]]></ETAPI_OPENAPI_FLOWPOINT_ID>
diff --git a/src-db/database/sourcedata/ETAPI_OPENAPI_REQ.xml b/src-db/database/sourcedata/ETAPI_OPENAPI_REQ.xml
index aeccdc5..6099636 100644
--- a/src-db/database/sourcedata/ETAPI_OPENAPI_REQ.xml
+++ b/src-db/database/sourcedata/ETAPI_OPENAPI_REQ.xml
@@ -110,10 +110,10 @@
 <!--3054CA329ED646839C0D60D51FDE3EA0-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
 <!--3054CA329ED646839C0D60D51FDE3EA0-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
 <!--3054CA329ED646839C0D60D51FDE3EA0-->  <NAME><![CDATA[GetWindowTabOrTableInfo]]></NAME>
-<!--3054CA329ED646839C0D60D51FDE3EA0-->  <DESCRIPTION><![CDATA[Allow to read the information of a Window, Tab or Table in Etendo.]]></DESCRIPTION>
+<!--3054CA329ED646839C0D60D51FDE3EA0-->  <DESCRIPTION><![CDATA[Allow to read the information of a Window, Tab, Field, Column or Table in Etendo.]]></DESCRIPTION>
 <!--3054CA329ED646839C0D60D51FDE3EA0-->  <TYPE><![CDATA[SMFWHE_WBHK]]></TYPE>
 <!--3054CA329ED646839C0D60D51FDE3EA0-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--3054CA329ED646839C0D60D51FDE3EA0-->  <POST_DESCRIPTION><![CDATA[Allow to read the information of a Window, Tab or Table in Etendo.]]></POST_DESCRIPTION>
+<!--3054CA329ED646839C0D60D51FDE3EA0-->  <POST_DESCRIPTION><![CDATA[Allow to read the information of a Window, Tab, Field, Column or Table in Etendo.]]></POST_DESCRIPTION>
 <!--3054CA329ED646839C0D60D51FDE3EA0--></ETAPI_OPENAPI_REQ>
 
 <!--3C2B3CD2C069437880B25E59C84D0079--><ETAPI_OPENAPI_REQ>
@@ -517,6 +517,22 @@ To Create a module dependency, only send the field "module" and "dependentModule
 <!--E71FF48CA97C48218409D9EEBE02C915-->  <PUT_DESCRIPTION><![CDATA[Update existing module dependency configuration. Modify the dependency relationships between modules using their IDs. Ensure Core dependency (ID='0') is maintained.]]></PUT_DESCRIPTION>
 <!--E71FF48CA97C48218409D9EEBE02C915--></ETAPI_OPENAPI_REQ>
 
+<!--ED4960B25FF34E6CB0B2E760D58D6990--><ETAPI_OPENAPI_REQ>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[ED4960B25FF34E6CB0B2E760D58D6990]]></ETAPI_OPENAPI_REQ_ID>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <NAME><![CDATA[Field]]></NAME>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <DESCRIPTION><![CDATA[Backup endpoint that can insert new fields on a tab. Params needed are:
+- ID of the module
+- ID of the column
+- Name of the field: given by the user, if not, use the column name
+- ID of the tab: the user must indicate on which tab the field has to be added]]></DESCRIPTION>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <TYPE><![CDATA[ETRX_Tab]]></TYPE>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--ED4960B25FF34E6CB0B2E760D58D6990-->  <POST_DESCRIPTION><![CDATA[Create a new field with specified module, column and name.]]></POST_DESCRIPTION>
+<!--ED4960B25FF34E6CB0B2E760D58D6990--></ETAPI_OPENAPI_REQ>
+
 <!--F73995961FE945D99F860BAC90FDDFA0--><ETAPI_OPENAPI_REQ>
 <!--F73995961FE945D99F860BAC90FDDFA0-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[F73995961FE945D99F860BAC90FDDFA0]]></ETAPI_OPENAPI_REQ_ID>
 <!--F73995961FE945D99F860BAC90FDDFA0-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
diff --git a/src-db/database/sourcedata/ETCOP_APP.xml b/src-db/database/sourcedata/ETCOP_APP.xml
index 61cae62..60e0bf0 100644
--- a/src-db/database/sourcedata/ETCOP_APP.xml
+++ b/src-db/database/sourcedata/ETCOP_APP.xml
@@ -1752,49 +1752,22 @@ Step 5: Execute the WebHook of RegisterBGProcessWebHook, with its corresponding
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--A999A734EF574934A7AF1CB4F1137FB1-->  <NAME><![CDATA[Windows, Tabs and File Agent]]></NAME>
-<!--A999A734EF574934A7AF1CB4F1137FB1-->  <DESCRIPTION><![CDATA[Windows, Tabs and File Agent]]></DESCRIPTION>
-<!--A999A734EF574934A7AF1CB4F1137FB1-->  <PROMPT><![CDATA[You are a developer agent who can create and register tables, windows, and tabs for Etendo.
+<!--A999A734EF574934A7AF1CB4F1137FB1-->  <NAME><![CDATA[Windows, Tabs and Fields Agent]]></NAME>
+<!--A999A734EF574934A7AF1CB4F1137FB1-->  <DESCRIPTION><![CDATA[Windows, Tabs and Fields Agent]]></DESCRIPTION>
+<!--A999A734EF574934A7AF1CB4F1137FB1-->  <PROMPT><![CDATA[You are a developer agent who can create and register windows, tabs and fields for Etendo.
 
-Your task will be to automate the process of creating windows, tables, and tabs, as well as registering them in the Application Dictionary. Additionally, it will involve adding columns and constraints to help maintain the structure of the database. Whenever we refer to the Application Dictionary, we will use the abbreviation "AD," and reference it when "registering" elements.
+Your task will be to automate the process of creating windows, tabs and fields, as well as registering them in the Application Dictionary. Whenever we refer to the Application Dictionary, we will use the abbreviation "AD," and reference it when "registering" elements.
 
 Below is a brief explanation of the processes:
 
-Create Tables (endpoint: CreateTable): This process is responsible for creating the table in the database. After creating the table, it is necessary to register the columns in the AD (endpoint RegisterColumns).
-
-Register Tables (endpoint: RegisterTable): This process is used to register a table in the AD. For this, you need a DBPrefix (the prefix of the module where the user is working), a table name, Java class name (you can generate it automatically if the user does not provide one), a dalevel (if the user does not specify one, use "3" as the default value), and description and help comment (both can be generated by you if the user does not provide them).
-
-Add Columns (endpoint: AddColumn): This process is useful when the user wants to add one or more columns. You will need the name of the table where the columns will be added (if you are creating a table, you can infer the name), also the prefix will be necessary, the name of the column, the type of the column, the default value if it has one (if the user does not provide a default value, use null) and choose true or false if the column can be null or not.
-
-There is no need to add the "id" column because it is automatically added when the table is created, unless the user specifically asks you to add an "id" column.
-Every time you add a column, it must be registered in the AD.
-In the case of YesNo columns, they must always be "not nullable," and the default value must be 'Y' or 'N'; if not indicated, set 'N' as the default value.
-
-Register Columns (endpoint RegisterColumns): This mode is used to register the columns of a table in the AD, each column must have a description and a help comment.
-
-⚠️ When registering columns, you must return to the user the ID of the column to which the list type will be assigned and use it with the corresponding endpoint.
-
-VERY IMPORTANT: When the user requests that a column be of type "LIST," after creating it, you must call the ChangeColumn endpoint to update its properties. You must first ask the user for the reference ID.
-Then:
-
-Use the column ID as part of the endpoint in the URL.
-
-In the body (body\_params), set:
-
-"reference": "17" (this represents the LIST type in Etendo).
-"referenceSearchKey" must be the reference ID provided by the user.
-
-Get Info (endpoint GetWindowTabOrTableInfo): This mode is used to obtain an element's data based on a keyword that you infer from the user prompt. This mode will be used if the user wants to access another element's information. If the user asks you to add a tab to an existing window, you must use this mode with the provided information, like the name, and then obtain the window ID. This mode is used with a keyword inferred by you from the user prompt; for now it may only be TAB, TABLE, or WINDOW.
+Get Info (endpoint GetWindowTabOrTableInfo): This mode is used to obtain an element's data based on a keyword that you infer from the user prompt. This mode will be used if the user wants to access another element's information. If the user asks you to add a tab to an existing window, you must use this mode with the provided information, like the name, and then obtain the window ID. This mode is used with a keyword inferred by you from the user prompt; for now it may only be COLUMN, TAB, TABLE, or WINDOW.
 For example, if the user's request is: "I want to see the columns of the table copdev\_client" you use this process with the parameters "table" as the keyword and "copdev\_client" as the name of the element. You might receive more than one match; then, provide the user with a list of names and wait for confirmation of one of them. Always try with the exact name provided by the user; if you do not find anything, try with the English translation.
 
-Register Window (endpoint RegisterWindow): This mode is used to register a window in the system. The name of the window will be the same name as the main table. This mode checks if a window already exists; if not, it creates it. If it already exists, you must ask the user if they want to create a new window or use the existing one. If the user wants to use the existing table, use the GetWindowTabOrTableInfo to obtain the window ID that you will use in the Register Tab step.
-
-Create View (endpoint CreateView): To create a view, you need the name of the view, the prefix of the module, and the query (an SQL query). It is important to check that the query has the following items:
-ad\_org\_id, ad\_client\_id, updated, updatedby, created, createdby, isactive, prefix\_name\_v\_id.
-It is possible that the query has an alias to replace a name, so the items might start with "alias." but it is important to check that all the items are included in the query.
+Register Window (endpoint RegisterWindow): This mode is used to register a window in the system. This mode checks if a window already exists; if not, it creates it. If it already exists, you must ask the user if they want to create a new window or use the existing one. If the user wants to use the existing table, use the GetWindowTabOrTableInfo to obtain the window ID that you will use in the Register Tab step. Use this endpoint when the user wants to create a new window.
 
 Register Tab (endpoint RegisterTab): This mode allows you to add tabs in a previously created window. When many tables are created in the same process, there is only one header tab, and it has a tab level of 0; the next tabs to add will have greater tab levels. If you receive more than one table and they are related, you must infer which is the header and which is not.
 Each time you add a new tab, it will be necessary to specify its level.
+Remember to use the module given by the user to create the tab or ask if not given. 
 For example, the first tab will have an initial level of 0, and the levels will increase for tabs that are nested within others. When you add a new tab, make sure to provide its level as a parameter. If the tab is nested within another, its level will be one higher than the level of the parent tab. This will ensure that the tabs are correctly organized hierarchically. This mode will use as parameter a "TabLevel"; this parameter must not be null or None.
 Also, this mode uses a TableID as a parameter; each tab is related to a previously generated table, so that will be the ID to use.
 
@@ -1804,86 +1777,16 @@ Read Elements (endpoint ElementsHandler): This mode is used to read the elements
 
 Write Elements (endpoint ElementsHandler): This mode is used to set the description and help comment in the columns that do not have it. This mode uses as parameters a Mode (in this case 'WRITE\_ELEMENTS'), a ColumnID, and a Help Comment and Description that will be added.
 
-Add Foreign Key (endpoint CreateColumn): This mode is used to add a foreign key between two tables, a child table where the column will be created and a parent table to which it points. The table name must be the name it has in the database, so you can use the Get Info process to get the database names (tablename).
-
-Register a table as a tree ("TreeCheck" and "ConfigIsTree" endpoints):
-If the user requests to create a table as a tree structure to allow hierarchies, you need the table name, table ID, and module ID.
-
-Step 1: Use the TreeCheck endpoint
-Take the name of a table passed to you by the user and look up its ID. To register a table as a tree, use the table ID and make a PUT request to the TreeCheck/{table\_id} endpoint, setting "istree" to true, as a boolean value (no quotes, must be a boolean data type and not a string).
-
-Step 2: Use the ConfigIsTree endpoint
-Use the module ID obtained in the previous step.
-In the "name" property, use the table name provided by the user.
-Set "treeStructure" to "ADTree".
-⚠ In the "table" property, you must pass the table ID, not the table name.
-If the user only provides the table name, first retrieve its table ID from the "viewTable" endpoint before making this request.
-
-✅ Make sure the data types are appropriate:
-"istree" must be a boolean value (true, not "true").
-"table" must contain the table ID, not its name.
-
-Before completing the process, check if the user requested a list-type column. If so, you must use the ChangeColumn endpoint and modify the necessary parameters.
+Register Field (endpoint RegisterField): This endpoint executes the "Create Fields" process for a specified tab, it will create all the fields that belong to the table associated to the tab. If this process fails, you should use the Field enpoint, which takes as param a module ID, Column ID, Name and the Tab ID. If you don't know the tab where the field should be created, ask the user.
 
-After creating or modifying a table or column, it is mandatory to validate its configuration using the CheckTablesColumnHook webhook before notifying the user that everything went well.
-
-🚨 Mandatory validation after any action 🚨
-After creating or modifying any table or column, you must validate its configuration using the CheckTablesColumnHook webhook.
-
-If the validation fails, stop the process and inform the user of the errors. The user must fix them before proceeding.
-
-🔍 Mandatory Validations After Creating a Table
-After creating a table, validate it with the following parameters:
-TableName → The name of the table to validate.
-
-Validation rules for tables:
-✅ The table name must be ≤ 30 characters.
-✅ The structure must comply with the Application Dictionary (AD) rules.
-✅ The table must follow naming conventions (singular, lowercase, underscore-separated).
-✅ If there are errors, stop the process and request corrections before proceeding.
-
-🔍 Mandatory Validations After Adding a Column
-After adding a column, validate it with the following parameters:
-TableName → The name of the table where the column will be added.
-CheckLengths → "true" to validate that column names do not exceed 30 characters.
-CheckForeignKeys → "true" to validate that foreign keys reference a valid primary key.
-
-Validation rules for columns:
-✅ Column names must be ≤ 30 characters.
-✅ The column type must be one of the supported types in Etendo.
-✅ If TableDir, it must have a valid reference table.
-✅ If a foreign key, it must point to a valid primary key in another table.
-✅ If a YesNo column, it must be NOT NULL with a default value of 'Y' or 'N'.
-✅ If there are errors, stop the process and request corrections before proceeding.
-
-AFTER ADDING A COLUMN, YOU MUST ALWAYS STORE ITS "COLUMN ID" RETURNED FROM THE ADDCOLUMN ENDPOINT. THIS ID WILL BE USED IN LATER STEPS SUCH AS WRITE ELEMENTS, CHANGE COLUMN OR OTHER CONFIGURATIONS.
 
 🚀 Workflow Updates
 All workflows must now include a validation step before performing any action:
-Creating a table: Validate before calling CreateTable.
-Adding a column: Validate before calling AddColumn.
-Registering a table: Validate before calling RegisterTable.
-Registering a column: Validate before calling RegisterColumns.
 If any validation fails, do not continue until the user fixes the errors.
 
-Workflow to create a table:
-
-* Create Table
-* Register Table
-* Add columns
-* Register columns
-  Before completing the process, check if the user requested a list-type column. If so, use the ChangeColumn endpoint and modify the necessary parameters.
-
-Workflow to add columns:
-
-* Search the ID of the table to modify (Get Info). If you are in a current create table process, you can use the same ID generated before.
-* Ask the user for the column data and add it (Add Column).
-* Register the columns added before (Register Columns).
-  Before completing the process, check if the user requested a list-type column. If so, use the ChangeColumn endpoint and modify the necessary parameters.
-
 Workflow to create a window:
 
-* Create the main table in case it doesn't exist (if the user prefers to use an existing table, use Get Info to obtain the table ID).
+* Use Get Info to obtain the table ID.
 * Sync Terms
 * Register Window
 * Register Tab (Header Tab)
@@ -1891,18 +1794,10 @@ Workflow to create a window:
 * Register Fields
 * Read Elements
 * Write Elements
-* Add Foreign keys
 * Sync Terms
 
-Workflow to configure a tree table:
-
-* Take the name of the table or ask the user if they haven't given it to you
-* Assign true to the "Istree" property of the table with the "TreeCheck" endpoint.
-* Use the "ConfigIsTree" endpoint and fill in the table tree categories tab: You must put the ID of the module you are working on in module, in name you must put the name chosen by the user for the table and in the "treeStructure" property you must assign "ADTree". In the "table" property pass the ID of the table you are working on.
-
 Some considerations to work correctly:
 
-* In the prompt it is possible the user asks you for a "pointing" to another table, this means you must add a foreign key pointing to that table. Remember the foreign key is in the table you are creating (ChildTable) and points to the other (ParentTable).
 * There are some elements that need description and help comments. The description is a comment that contains information about the element content. The help comment explains what this field will be used for. Both must be generated automatically by you on Windows, Tabs, Fields, Elements and cannot be null or empty.
   For example, to store medical information about people in a hospital, the fields could be:
   Admission Date:
@@ -1915,8 +1810,6 @@ Some considerations to work correctly:
   Description: This field lists any known allergies the patient has.
   Help Comment: Knowing a patient's allergies is critical to avoid prescribing medications or treatments that could cause adverse reactions.
 * Do not mention the step number.
-* Table names must be singular and in English.
-* Never suggest a column name ending in '\_id' or '\_ID'.
 * In the database, words in names must be separated with "\_" and must be lowercase.
 * In the Application Dictionary, names must have words separated by spaces and each word must be capitalized.
 * All configuration in Etendo and its content must be in English. If the user speaks to you in another language, answer them in that language, but all names, help texts, descriptions, and Etendo-related information must be in English.
@@ -1924,28 +1817,19 @@ Some considerations to work correctly:
 Example workflow:
 User: I want to create a window with name Subject, with students and evaluations, and each evaluation has questions, use the prefix MOD. The students point to the table c\_bpartner.
 
-* Register Tables (Subject, Evaluation, Student, Question) in the AD with the prefix.
-* Create Tables in the database.
-* Add the specific columns on tables. Example for Subject: subject name, start date, program year, hours, responsible professor.
-  Example for Evaluation: evaluation number, exam date, exam type (e.g., written, oral).
-  Example for Question: question number, question type (e.g., multiple-choice, open-ended).
-  Example for Student: name, age, credential number.
-* Register Columns of all the tables worked on.
-* Sync Terms
+* Get table IDs (Subject, Evaluation, Student, Question) in the AD.
 * Register the window Subject to show the information
 * Register the Header Tab Subject (with tab level 0).
 * Register tab Evaluation (with tab level 1), register tab Student (with tab level 1) and register tab Question (with tab level 2).
 * Use Get Info with keyword "Tab" and the names to verify the correct tab registration.
 * Register fields for the tabs.
-* Add foreign keys: at this point you must add the foreign key on Question pointing to Evaluation, a foreign key on Evaluation pointing to Subject, a foreign key on Student pointing to Subject and a foreign key on Student pointing to c\_bpartner.
-* Use Get Info to obtain the IDs for all the tables you've added, and then use Elements Handler to Read the elements and write the missing elements.
+* Use Elements Handler to Read the elements and write the missing elements.
 
-Finally, if you finalized all the steps, you must explain to the user what was done and recommend to do a compilation and restart Etendo.
+Finally, if you finalized all the steps, you must explain to the user what was done.
 
 The API Spec is the following:
 
-@openapidevassistantmodule@ and @istree@ and @checker@ and @columnlist@
-]]></PROMPT>
+@openapidevassistantmodule@]]></PROMPT>
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <APPTYPE><![CDATA[multimodel]]></APPTYPE>
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <CODE_INTERPRETER><![CDATA[N]]></CODE_INTERPRETER>
 <!--A999A734EF574934A7AF1CB4F1137FB1-->  <RETRIEVAL><![CDATA[N]]></RETRIEVAL>
diff --git a/src-db/database/sourcedata/ETCOP_FILE.xml b/src-db/database/sourcedata/ETCOP_FILE.xml
index a917e1c..a0c3845 100644
--- a/src-db/database/sourcedata/ETCOP_FILE.xml
+++ b/src-db/database/sourcedata/ETCOP_FILE.xml
@@ -197,8 +197,8 @@
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
-<!--C29FFA9CD036490D8142EF1D6B29108C-->  <NAME><![CDATA[Windows, Tabs and File Agent]]></NAME>
-<!--C29FFA9CD036490D8142EF1D6B29108C-->  <DESCRIPTION><![CDATA[Windows, Tabs and File Agent]]></DESCRIPTION>
+<!--C29FFA9CD036490D8142EF1D6B29108C-->  <NAME><![CDATA[Windows, Tabs and Fields Agent]]></NAME>
+<!--C29FFA9CD036490D8142EF1D6B29108C-->  <DESCRIPTION><![CDATA[Windows, Tabs and Fields Agent]]></DESCRIPTION>
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <TYPE><![CDATA[FLOW]]></TYPE>
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <FILENAME><![CDATA[devassistant.json]]></FILENAME>
 <!--C29FFA9CD036490D8142EF1D6B29108C-->  <ISTEMP><![CDATA[N]]></ISTEMP>
diff --git a/src-db/database/sourcedata/ETCOP_TEAM_MEMBER.xml b/src-db/database/sourcedata/ETCOP_TEAM_MEMBER.xml
index c32582e..c63b7db 100644
--- a/src-db/database/sourcedata/ETCOP_TEAM_MEMBER.xml
+++ b/src-db/database/sourcedata/ETCOP_TEAM_MEMBER.xml
@@ -28,6 +28,16 @@
 <!--48CF6176E55848EDBA456C6FF33734DB-->  <APP_MEMBER><![CDATA[630603D3F0FA40A4AD73C89617668C3F]]></APP_MEMBER>
 <!--48CF6176E55848EDBA456C6FF33734DB--></ETCOP_TEAM_MEMBER>
 
+<!--49252B664838496A882409A270A4F61C--><ETCOP_TEAM_MEMBER>
+<!--49252B664838496A882409A270A4F61C-->  <ETCOP_TEAM_MEMBER_ID><![CDATA[49252B664838496A882409A270A4F61C]]></ETCOP_TEAM_MEMBER_ID>
+<!--49252B664838496A882409A270A4F61C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--49252B664838496A882409A270A4F61C-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--49252B664838496A882409A270A4F61C-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--49252B664838496A882409A270A4F61C-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--49252B664838496A882409A270A4F61C-->  <ETCOP_APP_ID><![CDATA[DF6EDFBF02B94BF4BDA5A31BE6F5F861]]></ETCOP_APP_ID>
+<!--49252B664838496A882409A270A4F61C-->  <APP_MEMBER><![CDATA[A999A734EF574934A7AF1CB4F1137FB1]]></APP_MEMBER>
+<!--49252B664838496A882409A270A4F61C--></ETCOP_TEAM_MEMBER>
+
 <!--6ADEC31FDE1548CBBE754B35DF6C3663--><ETCOP_TEAM_MEMBER>
 <!--6ADEC31FDE1548CBBE754B35DF6C3663-->  <ETCOP_TEAM_MEMBER_ID><![CDATA[6ADEC31FDE1548CBBE754B35DF6C3663]]></ETCOP_TEAM_MEMBER_ID>
 <!--6ADEC31FDE1548CBBE754B35DF6C3663-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
diff --git a/src-db/database/sourcedata/ETRX_OPENAPI_FIELD.xml b/src-db/database/sourcedata/ETRX_OPENAPI_FIELD.xml
new file mode 100644
index 0000000..d546315
--- /dev/null
+++ b/src-db/database/sourcedata/ETRX_OPENAPI_FIELD.xml
@@ -0,0 +1,51 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<data>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C--><ETRX_OPENAPI_FIELD>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <ETRX_OPENAPI_FIELD_ID><![CDATA[2A0CD05F0AB843A79D9389BD986BAB5C]]></ETRX_OPENAPI_FIELD_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <ETRX_OPENAPI_TAB_ID><![CDATA[0B26382A03AC4C9EB80B11A9DD28F56C]]></ETRX_OPENAPI_TAB_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <AD_FIELD_ID><![CDATA[130]]></AD_FIELD_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <DESCRIPTION><![CDATA[Column ID]]></DESCRIPTION>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C-->  <SEQNO><![CDATA[30]]></SEQNO>
+<!--2A0CD05F0AB843A79D9389BD986BAB5C--></ETRX_OPENAPI_FIELD>
+
+<!--5A3226CA031B4E83B3D82509AD8E7BBE--><ETRX_OPENAPI_FIELD>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <ETRX_OPENAPI_FIELD_ID><![CDATA[5A3226CA031B4E83B3D82509AD8E7BBE]]></ETRX_OPENAPI_FIELD_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <ETRX_OPENAPI_TAB_ID><![CDATA[0B26382A03AC4C9EB80B11A9DD28F56C]]></ETRX_OPENAPI_TAB_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <AD_FIELD_ID><![CDATA[127]]></AD_FIELD_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <DESCRIPTION><![CDATA[Name of the field]]></DESCRIPTION>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE-->  <SEQNO><![CDATA[20]]></SEQNO>
+<!--5A3226CA031B4E83B3D82509AD8E7BBE--></ETRX_OPENAPI_FIELD>
+
+<!--F6B38C1EE8B242398580F603508F2E9E--><ETRX_OPENAPI_FIELD>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <ETRX_OPENAPI_FIELD_ID><![CDATA[F6B38C1EE8B242398580F603508F2E9E]]></ETRX_OPENAPI_FIELD_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <ETRX_OPENAPI_TAB_ID><![CDATA[0B26382A03AC4C9EB80B11A9DD28F56C]]></ETRX_OPENAPI_TAB_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <AD_FIELD_ID><![CDATA[126]]></AD_FIELD_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <DESCRIPTION><![CDATA[Tab ID]]></DESCRIPTION>
+<!--F6B38C1EE8B242398580F603508F2E9E-->  <SEQNO><![CDATA[40]]></SEQNO>
+<!--F6B38C1EE8B242398580F603508F2E9E--></ETRX_OPENAPI_FIELD>
+
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE--><ETRX_OPENAPI_FIELD>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <ETRX_OPENAPI_FIELD_ID><![CDATA[F81C1CB0CC2B4ACFA3712FB2163D8CBE]]></ETRX_OPENAPI_FIELD_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <ETRX_OPENAPI_TAB_ID><![CDATA[0B26382A03AC4C9EB80B11A9DD28F56C]]></ETRX_OPENAPI_TAB_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <AD_FIELD_ID><![CDATA[5661DEEC4315FC21E040007F01004C04]]></AD_FIELD_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <DESCRIPTION><![CDATA[Module ID]]></DESCRIPTION>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE-->  <SEQNO><![CDATA[10]]></SEQNO>
+<!--F81C1CB0CC2B4ACFA3712FB2163D8CBE--></ETRX_OPENAPI_FIELD>
+
+</data>
diff --git a/src-db/database/sourcedata/ETRX_OPENAPI_TAB.xml b/src-db/database/sourcedata/ETRX_OPENAPI_TAB.xml
index 8bb001e..90c4d66 100644
--- a/src-db/database/sourcedata/ETRX_OPENAPI_TAB.xml
+++ b/src-db/database/sourcedata/ETRX_OPENAPI_TAB.xml
@@ -10,6 +10,16 @@
 <!--0085141620F64B77A94C2FF823DEE8FE-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
 <!--0085141620F64B77A94C2FF823DEE8FE--></ETRX_OPENAPI_TAB>
 
+<!--0B26382A03AC4C9EB80B11A9DD28F56C--><ETRX_OPENAPI_TAB>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <ETRX_OPENAPI_TAB_ID><![CDATA[0B26382A03AC4C9EB80B11A9DD28F56C]]></ETRX_OPENAPI_TAB_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <AD_TAB_ID><![CDATA[107]]></AD_TAB_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <ETAPI_OPENAPI_REQ_ID><![CDATA[ED4960B25FF34E6CB0B2E760D58D6990]]></ETAPI_OPENAPI_REQ_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--0B26382A03AC4C9EB80B11A9DD28F56C--></ETRX_OPENAPI_TAB>
+
 <!--20E10DC2FD90404CA779124EF00D3EA8--><ETRX_OPENAPI_TAB>
 <!--20E10DC2FD90404CA779124EF00D3EA8-->  <ETRX_OPENAPI_TAB_ID><![CDATA[20E10DC2FD90404CA779124EF00D3EA8]]></ETRX_OPENAPI_TAB_ID>
 <!--20E10DC2FD90404CA779124EF00D3EA8-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
diff --git a/src-db/database/sourcedata/SMFWHE_DEFINEDWEBHOOK_PARAM.xml b/src-db/database/sourcedata/SMFWHE_DEFINEDWEBHOOK_PARAM.xml
index a7a5912..2f4b892 100644
--- a/src-db/database/sourcedata/SMFWHE_DEFINEDWEBHOOK_PARAM.xml
+++ b/src-db/database/sourcedata/SMFWHE_DEFINEDWEBHOOK_PARAM.xml
@@ -224,6 +224,18 @@
 <!--4DA76C84302D4DE297841BD94FDAF735-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
 <!--4DA76C84302D4DE297841BD94FDAF735--></SMFWHE_DEFINEDWEBHOOK_PARAM>
 
+<!--4FD32D10523F4A219FA520A8E958167D--><SMFWHE_DEFINEDWEBHOOK_PARAM>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[4FD32D10523F4A219FA520A8E958167D]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <SMFWHE_DEFINEDWEBHOOK_ID><![CDATA[F726D7E987AC4444B93AE00C8A41EC54]]></SMFWHE_DEFINEDWEBHOOK_ID>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <NAME><![CDATA[Name]]></NAME>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <ISREQUIRED><![CDATA[Y]]></ISREQUIRED>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--4FD32D10523F4A219FA520A8E958167D-->  <DESCRIPTION><![CDATA[Name for the application element]]></DESCRIPTION>
+<!--4FD32D10523F4A219FA520A8E958167D--></SMFWHE_DEFINEDWEBHOOK_PARAM>
+
 <!--53A9C0D85D324D73A5F4992A6865F03A--><SMFWHE_DEFINEDWEBHOOK_PARAM>
 <!--53A9C0D85D324D73A5F4992A6865F03A-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[53A9C0D85D324D73A5F4992A6865F03A]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
 <!--53A9C0D85D324D73A5F4992A6865F03A-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -363,6 +375,18 @@
 <!--81A40F3FE50A4D93AE61591CB4AF4889-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
 <!--81A40F3FE50A4D93AE61591CB4AF4889--></SMFWHE_DEFINEDWEBHOOK_PARAM>
 
+<!--84EE966776F64C8F851CF3EBB42ADD8D--><SMFWHE_DEFINEDWEBHOOK_PARAM>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[84EE966776F64C8F851CF3EBB42ADD8D]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <SMFWHE_DEFINEDWEBHOOK_ID><![CDATA[F51982D50B5A4763AC6E2BC6CBB03B00]]></SMFWHE_DEFINEDWEBHOOK_ID>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <NAME><![CDATA[DBPrefix]]></NAME>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <ISREQUIRED><![CDATA[Y]]></ISREQUIRED>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--84EE966776F64C8F851CF3EBB42ADD8D-->  <DESCRIPTION><![CDATA[DB Prefix of the module where the tab belongs]]></DESCRIPTION>
+<!--84EE966776F64C8F851CF3EBB42ADD8D--></SMFWHE_DEFINEDWEBHOOK_PARAM>
+
 <!--85F15E4653754FD4B25942A4764331C1--><SMFWHE_DEFINEDWEBHOOK_PARAM>
 <!--85F15E4653754FD4B25942A4764331C1-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[85F15E4653754FD4B25942A4764331C1]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
 <!--85F15E4653754FD4B25942A4764331C1-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -489,6 +513,18 @@
 <!--AE590F37C5814345BF5B77952BF4724F-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
 <!--AE590F37C5814345BF5B77952BF4724F--></SMFWHE_DEFINEDWEBHOOK_PARAM>
 
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE--><SMFWHE_DEFINEDWEBHOOK_PARAM>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[AF4DFE0C94554692B2D5174DEFC1F3EE]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <AD_ORG_ID><![CDATA[0]]></AD_ORG_ID>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <ISACTIVE><![CDATA[Y]]></ISACTIVE>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <SMFWHE_DEFINEDWEBHOOK_ID><![CDATA[385FDE3FACCA4E09972D220E35CFC2DF]]></SMFWHE_DEFINEDWEBHOOK_ID>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <NAME><![CDATA[DBPrefix]]></NAME>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <ISREQUIRED><![CDATA[Y]]></ISREQUIRED>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE-->  <DESCRIPTION><![CDATA[DB Prefix of the module where the tab belongs]]></DESCRIPTION>
+<!--AF4DFE0C94554692B2D5174DEFC1F3EE--></SMFWHE_DEFINEDWEBHOOK_PARAM>
+
 <!--B303ABAB8BCD40C1B47878A68DFEE86F--><SMFWHE_DEFINEDWEBHOOK_PARAM>
 <!--B303ABAB8BCD40C1B47878A68DFEE86F-->  <SMFWHE_DEFINEDWEBHOOK_PARAM_ID><![CDATA[B303ABAB8BCD40C1B47878A68DFEE86F]]></SMFWHE_DEFINEDWEBHOOK_PARAM_ID>
 <!--B303ABAB8BCD40C1B47878A68DFEE86F-->  <AD_CLIENT_ID><![CDATA[0]]></AD_CLIENT_ID>
@@ -521,7 +557,7 @@
 <!--B766EE98412C478E9E6DC38403D5E664-->  <NAME><![CDATA[DBPrefix]]></NAME>
 <!--B766EE98412C478E9E6DC38403D5E664-->  <ISREQUIRED><![CDATA[Y]]></ISREQUIRED>
 <!--B766EE98412C478E9E6DC38403D5E664-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--B766EE98412C478E9E6DC38403D5E664-->  <DESCRIPTION><![CDATA[DB Prefix of the module where the tab belongs]]></DESCRIPTION>
+<!--B766EE98412C478E9E6DC38403D5E664-->  <DESCRIPTION><![CDATA[DB Prefix of the module where the window belongs]]></DESCRIPTION>
 <!--B766EE98412C478E9E6DC38403D5E664--></SMFWHE_DEFINEDWEBHOOK_PARAM>
 
 <!--BEED0489D7E04B05AA03B9F396979E5B--><SMFWHE_DEFINEDWEBHOOK_PARAM>
@@ -556,7 +592,7 @@
 <!--C63D0E95F78546BF85C74C580A9CF51E-->  <NAME><![CDATA[KeyWord]]></NAME>
 <!--C63D0E95F78546BF85C74C580A9CF51E-->  <ISREQUIRED><![CDATA[Y]]></ISREQUIRED>
 <!--C63D0E95F78546BF85C74C580A9CF51E-->  <AD_MODULE_ID><![CDATA[77E11BDECDEB44008DD2235D259A77D7]]></AD_MODULE_ID>
-<!--C63D0E95F78546BF85C74C580A9CF51E-->  <DESCRIPTION><![CDATA[Mode to search. Can be TAB, TABLE or WINDOW]]></DESCRIPTION>
+<!--C63D0E95F78546BF85C74C580A9CF51E-->  <DESCRIPTION><![CDATA[Mode to search. Can be COLUMN, FIELD, TAB, TABLE or WINDOW]]></DESCRIPTION>
 <!--C63D0E95F78546BF85C74C580A9CF51E--></SMFWHE_DEFINEDWEBHOOK_PARAM>
 
 <!--C7362ADD975D494DAEB0BD42F8BDCA43--><SMFWHE_DEFINEDWEBHOOK_PARAM>
diff --git a/src-test/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfoTest.java b/src-test/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfoTest.java
new file mode 100644
index 0000000..0ae0d01
--- /dev/null
+++ b/src-test/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfoTest.java
@@ -0,0 +1,225 @@
+package com.etendoerp.copilot.devassistant.webhooks;
+
+import static org.junit.Assert.*;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.codehaus.jettison.json.JSONArray;
+import org.codehaus.jettison.json.JSONException;
+import org.hibernate.criterion.Restrictions;
+import org.junit.Before;
+import org.junit.Test;
+import org.openbravo.base.secureApp.VariablesSecureApp;
+import org.openbravo.base.weld.test.WeldBaseTest;
+import org.openbravo.client.kernel.RequestContext;
+import org.openbravo.dal.core.OBContext;
+import org.openbravo.dal.service.OBCriteria;
+import org.openbravo.dal.service.OBDal;
+import org.openbravo.model.ad.datamodel.Column;
+import org.openbravo.model.ad.datamodel.Table;
+import org.openbravo.test.base.TestConstants;
+
+/**
+ * Tests for {@link GetWindowTabOrTableInfo} webhook service.
+ */
+public class GetWindowTabOrTableInfoTest extends WeldBaseTest {
+  // Parameter keys
+  private static final String PARAM_NAME = "Name";
+  private static final String PARAM_KEYWORD = "KeyWord";
+
+  // Response keys
+  private static final String ERROR_KEY = "error";
+  private static final String QUERY_EXECUTED_KEY = "QueryExecuted";
+  private static final String COLUMNS_KEY = "Columns";
+  private static final String DATA_KEY = "Data";
+
+  // Test data
+  private static final String EXISTING_TABLE_ID = "6344EB0DE29E4E52ACF99F591FFCD07D"; // ETCOP_App table
+
+  /**
+   * Initializes DAL and request context before each test.
+   */
+  @Before
+  public void setUpContext() throws Exception {
+    super.setUp();
+    OBContext.setOBContext(TestConstants.Users.ADMIN, TestConstants.Roles.SYS_ADMIN, TestConstants.Clients.SYSTEM,
+        TestConstants.Orgs.MAIN);
+    VariablesSecureApp vars = new VariablesSecureApp(OBContext.getOBContext().getUser().getId(),
+        OBContext.getOBContext().getCurrentClient().getId(), OBContext.getOBContext().getCurrentOrganization().getId());
+    RequestContext.get().setVariableSecureApp(vars);
+  }
+
+  /**
+   * Verifies that omitting the KeyWord parameter produces an error response.
+   */
+  @Test
+  public void missingKeyWordProducesError() {
+    GetWindowTabOrTableInfo svc = new GetWindowTabOrTableInfo();
+    Map<String, String> params = new HashMap<>();
+    params.put(PARAM_NAME, "anything");
+    Map<String, String> resp = new HashMap<>();
+    svc.get(params, resp);
+    assertTrue(resp.containsKey(ERROR_KEY));
+    assertTrue(resp.get(ERROR_KEY).toLowerCase().contains("keyword"));
+  }
+
+  /**
+   * Verifies that an invalid KeyWord value returns an error.
+   */
+  @Test
+  public void invalidKeyWordProducesError() {
+    GetWindowTabOrTableInfo svc = new GetWindowTabOrTableInfo();
+    Map<String, String> params = new HashMap<>();
+    params.put(PARAM_NAME, "whatever");
+    params.put(PARAM_KEYWORD, "invalidType");
+    Map<String, String> resp = new HashMap<>();
+    svc.get(params, resp);
+    assertTrue(resp.containsKey(ERROR_KEY));
+    assertTrue(resp.get(ERROR_KEY).toLowerCase().contains("key word is not correct"));
+  }
+
+  /**
+   * Ensures a valid 'table' query returns expected column metadata and at least one data row.
+   * Uses an existing table ID for guaranteed match.
+   */
+  @Test
+  public void validTableKeywordReturnsData() throws JSONException {
+    GetWindowTabOrTableInfo svc = new GetWindowTabOrTableInfo();
+    Map<String, String> params = new HashMap<>();
+    // Use the ID so the equality part of the WHERE clause matches even if name filtering fails.
+    params.put(PARAM_NAME, EXISTING_TABLE_ID);
+    params.put(PARAM_KEYWORD, "table");
+    Map<String, String> resp = new HashMap<>();
+    svc.get(params, resp);
+
+    assertFalse("Should not return error for valid table keyword", resp.containsKey(ERROR_KEY));
+    assertTrue(resp.containsKey(QUERY_EXECUTED_KEY));
+    assertTrue(resp.containsKey(COLUMNS_KEY));
+    assertTrue(resp.containsKey(DATA_KEY));
+
+    JSONArray cols = new JSONArray(resp.get(COLUMNS_KEY));
+    // Expect 3 columns: ad_table_id, tablename, name
+    assertEquals(3, cols.length());
+    // Basic name checks (case-insensitive)
+    String first = cols.getString(0).toLowerCase();
+    assertTrue(first.contains("ad_table_id"));
+
+    JSONArray data = new JSONArray(resp.get(DATA_KEY));
+    assertTrue("Expected at least one matching row", data.length() > 0);
+    // Each row should have same number of elements as columns
+    JSONArray row0 = data.getJSONArray(0);
+    assertEquals(cols.length(), row0.length());
+  }
+
+  /**
+   * Ensures a valid 'column' query returns column metadata including parent table id and data rows.
+   * Uses an existing column ID from the known table.
+   */
+  @Test
+  public void validColumnKeywordReturnsData() throws JSONException {
+    // Obtain one existing column id from a known table to guarantee a match
+    Table table = OBDal.getInstance().get(Table.class, EXISTING_TABLE_ID);
+    assertNotNull("Precondition: table must exist", table);
+    List<Column> colList = table.getADColumnList();
+    assertFalse("Precondition: table must have columns", colList.isEmpty());
+    String existingColumnId = colList.get(0).getId();
+
+    GetWindowTabOrTableInfo svc = new GetWindowTabOrTableInfo();
+    Map<String, String> params = new HashMap<>();
+    params.put(PARAM_NAME, existingColumnId); // direct ID match
+    params.put(PARAM_KEYWORD, "column");
+    Map<String, String> resp = new HashMap<>();
+    svc.get(params, resp);
+
+    assertFalse(resp.containsKey(ERROR_KEY));
+    assertTrue(resp.containsKey(QUERY_EXECUTED_KEY));
+    assertTrue(resp.containsKey(COLUMNS_KEY));
+    assertTrue(resp.containsKey(DATA_KEY));
+
+    JSONArray cols = new JSONArray(resp.get(COLUMNS_KEY));
+    // Expect 3 columns: ad_column_id, ad_table_id, name
+    assertEquals(3, cols.length());
+    String first = cols.getString(0).toLowerCase();
+    assertTrue(first.contains("ad_column_id"));
+    String second = cols.getString(1).toLowerCase();
+    assertTrue(second.contains("ad_table_id"));
+
+    JSONArray data = new JSONArray(resp.get(DATA_KEY));
+    assertTrue(data.length() > 0);
+    JSONArray row0 = data.getJSONArray(0);
+    assertEquals(cols.length(), row0.length());
+
+    // Optional: verify the first column value equals provided ID
+    String returnedId = row0.getString(0);
+    assertEquals(existingColumnId, returnedId);
+  }
+
+  /**
+   * Extra sanity: querying a tab by id returns data (if any tab from window exists); if no tab found, still no error.
+   */
+  @Test
+  public void validTabQueryHandlesNoResultsGracefully() throws JSONException {
+    // Find any existing tab id by querying for one linked to the known table (via its tabs) if possible
+    // Fallback to a non-existent id to ensure graceful empty result.
+    String tabId = findAnyTabIdForTable(EXISTING_TABLE_ID);
+    if (tabId == null) {
+      tabId = "00000000000000000000000000000000"; // improbable id
+    }
+
+    GetWindowTabOrTableInfo svc = new GetWindowTabOrTableInfo();
+    Map<String, String> params = new HashMap<>();
+    params.put(PARAM_NAME, tabId);
+    params.put(PARAM_KEYWORD, "tab");
+    Map<String, String> resp = new HashMap<>();
+    svc.get(params, resp);
+
+    // Even if no data, should not be an error if keyword valid
+    assertFalse(resp.containsKey(ERROR_KEY));
+    assertTrue(resp.containsKey(QUERY_EXECUTED_KEY));
+    assertTrue(resp.containsKey(COLUMNS_KEY));
+    assertTrue(resp.containsKey(DATA_KEY));
+
+    JSONArray cols = new JSONArray(resp.get(COLUMNS_KEY));
+    // Expect 3 columns: ad_tab_id, ad_window_id, name
+    assertEquals(3, cols.length());
+    assertTrue(cols.getString(0).toLowerCase().contains("ad_tab_id"));
+    assertTrue(cols.getString(1).toLowerCase().contains("ad_window_id"));
+
+    // Data may be empty; ensure structure is valid JSON array
+    new JSONArray(resp.get(DATA_KEY));
+  }
+
+  /**
+   * Attempts to find any Tab ID related to a given table by joining through columns & fields if possible.
+   * Returns null if none found quickly.
+   */
+  private String findAnyTabIdForTable(String tableId) {
+    try {
+      // Query AD_Tab where AD_Table_ID matches or related through column existence.
+      String hql = "from org.openbravo.model.ad.ui.Tab t where t.table.id = :tableId";
+      @SuppressWarnings("unchecked")
+      List<org.openbravo.model.ad.ui.Tab> tabs = (List<org.openbravo.model.ad.ui.Tab>) OBDal.getInstance().getSession()
+          .createQuery(hql).setParameter("tableId", tableId).setMaxResults(1).list();
+      if (!tabs.isEmpty()) {
+        return tabs.get(0).getId();
+      }
+    } catch (Exception ignored) {
+      // Ignore and fallback to null
+    }
+    // Alternate attempt using criteria
+    try {
+      OBCriteria<org.openbravo.model.ad.ui.Tab> crit = OBDal.getInstance().createCriteria(org.openbravo.model.ad.ui.Tab.class);
+      crit.add(Restrictions.eq("table.id", tableId));
+      crit.setMaxResults(1);
+      List<org.openbravo.model.ad.ui.Tab> list = crit.list();
+      if (!list.isEmpty()) {
+        return list.get(0).getId();
+      }
+    } catch (Exception ignored) {
+      // Ignore and fallback to null
+    }
+    return null;
+  }
+}
diff --git a/src/com/etendoerp/copilot/devassistant/webhooks/ElementsHandler.java b/src/com/etendoerp/copilot/devassistant/webhooks/ElementsHandler.java
index 162c7e4..84019f7 100644
--- a/src/com/etendoerp/copilot/devassistant/webhooks/ElementsHandler.java
+++ b/src/com/etendoerp/copilot/devassistant/webhooks/ElementsHandler.java
@@ -47,14 +47,16 @@ private static void writeMode(Map<String, String> parameter, Map<String, String>
       if (columnId == null) {
         throw new OBException(String.format(OBMessageUtils.messageBD("COPDEV_InvalidElementID")));
       }
-
+      String name = parameter.get("Name");
       String description = parameter.get("Description");
       String helpComment = parameter.get("HelpComment");
       Column column = OBDal.getInstance().get(Column.class, columnId);
       if (column == null) {
         throw new IllegalArgumentException("Column with ID " + columnId + " not found.");
       }
-      column.setName(StringUtils.replace(column.getName(), "_", " "));
+      if (!column.getName().startsWith("EM_")) {
+        column.setName(StringUtils.replace(column.getName(), "_", " "));
+      }
       column.setDescription(description);
       column.setHelpComment(helpComment);
       Element element = column.getApplicationElement();
@@ -62,7 +64,7 @@ private static void writeMode(Map<String, String> parameter, Map<String, String>
         throw new IllegalArgumentException("Element not found.");
       }
 
-      String elementName = element.getName();
+      String elementName = StringUtils.isBlank(name) ? element.getName() : name;
       String elementPrinTxt = element.getPrintText();
       if (StringUtils.isBlank(elementName)) {
         elementName = column.getName();
diff --git a/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfo.java b/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfo.java
index b826b01..c5f4750 100644
--- a/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfo.java
+++ b/src/com/etendoerp/copilot/devassistant/webhooks/GetWindowTabOrTableInfo.java
@@ -10,7 +10,6 @@
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-import org.openbravo.base.exception.OBException;
 import org.openbravo.dal.service.OBDal;
 
 import com.etendoerp.webhookevents.services.BaseWebhookService;
@@ -26,7 +25,8 @@
  * method to process the webhook request.
  */
 public class GetWindowTabOrTableInfo extends BaseWebhookService {
-
+  private static final String TABLE = "table";
+  private static final String ERROR = "error";
   private static final Logger LOG = LogManager.getLogger();
   private static final String QUERY_EXECUTED = "QueryExecuted";
   private static final String COLUMNS = "Columns";
@@ -51,35 +51,74 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
       LOG.info("Parameter: {} = {}", entry.getKey(), entry.getValue());
     }
 
-    List<String> allowedKeywords = Arrays.asList("table", "window", "tab");
+    List<String> allowedKeywords = Arrays.asList("column","field",TABLE, "window", "tab");
 
     String name = parameter.get("Name");
     String keyWord = parameter.get("KeyWord");
 
-    // Construct SQL query to fetch data based on the name and keyWord
-    String query = "SELECT " +
-        "ad_" + keyWord + "_id, " +
-        ifIsTable(keyWord, "tablename,") +
-        "name " +
-        "FROM ad_" + keyWord + " " +
-        "WHERE name ilike '%" + name + "%'" +
-        ifIsTable(keyWord, "OR tablename ILIKE '%" + name + "%' ") +
-        "OR ad_" + keyWord + "_id = '" + name + "'";
+    if (StringUtils.isBlank(keyWord)) {
+      responseVars.put(ERROR, "KeyWord parameter is required");
+      return;
+    }
+
+    keyWord = StringUtils.lowerCase(keyWord.trim());
+
+    // Validate the keyWord to ensure it's allowed
+    if (!allowedKeywords.contains(keyWord)) {
+      responseVars.put(ERROR, "Key word is not correct.");
+      return;
+    }
+
+    // Determine parent key column (if any) to include in the SELECT list
+    String parentKeyColumn = null; // column name in the underlying AD_ table
+    switch (keyWord) {
+      case "column":
+        parentKeyColumn = "ad_table_id";
+        break;
+      case "field":
+        parentKeyColumn = "ad_tab_id";
+        break;
+      case "tab":
+        parentKeyColumn = "ad_window_id";
+        break;
+      default: // window, table -> no parent
+        break;
+    }
+
+    // Build the SELECT clause dynamically
+    StringBuilder queryBuilder = new StringBuilder();
+    queryBuilder.append("SELECT ad_").append(keyWord).append("_id, ");
+    if (StringUtils.equals(keyWord, TABLE)) {
+      queryBuilder.append("tablename, ");
+    }
+    if (parentKeyColumn != null) {
+      queryBuilder.append(parentKeyColumn).append(", ");
+    }
+    queryBuilder.append("name FROM ad_").append(keyWord)
+        .append(" WHERE (name ILIKE ? ");
+    boolean hasTableNameSearch = StringUtils.equals(keyWord, TABLE);
+    if (hasTableNameSearch) {
+      queryBuilder.append(" OR tablename ILIKE ? ");
+    }
+    queryBuilder.append(" OR ad_").append(keyWord).append("_id = ?) ");
+
+    String query = queryBuilder.toString();
+    LOG.debug("Executing query: {}", query);
 
     Connection conn = OBDal.getInstance().getConnection();
 
     try (PreparedStatement statement = conn.prepareStatement(query)) {
-      keyWord = StringUtils.lowerCase(keyWord);
-
-      // Validate the keyWord to ensure it's allowed
-      if (!allowedKeywords.contains(keyWord)) {
-        throw new OBException("Key word is not correct.");
+      // Bind parameters
+      String likeValue = "%" + name + "%";
+      int paramIndex = 1;
+      statement.setString(paramIndex++, likeValue);
+      if (hasTableNameSearch) {
+        statement.setString(paramIndex++, likeValue);
       }
+      statement.setString(paramIndex, name); // id match (exact)
 
-      // Execute the query and process the result set
       ResultSet result = statement.executeQuery();
 
-      // Get column names and prepare the response
       int columnCount = result.getMetaData().getColumnCount();
       JSONArray columns = new JSONArray();
       for (int i = 1; i <= columnCount; i++) {
@@ -95,34 +134,13 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
         data.put(row);
       }
 
-      // Add results to response variables
       responseVars.put(QUERY_EXECUTED, query);
       responseVars.put(COLUMNS, columns.toString());
       responseVars.put(DATA, data.toString());
 
     } catch (Exception e) {
-      // Handle exceptions and store the error message
-      responseVars.put("error", e.getMessage());
-    }
-  }
-
-  /**
-   * Returns the provided text if the keyWord is "table", otherwise returns an empty string.
-   * <p>
-   * This method checks if the given keyWord is equal to "table" (case-insensitive).
-   * If it is, the method returns the provided text. Otherwise, it returns an empty string.
-   *
-   * @param keyWord
-   *     the keyword to check
-   * @param text
-   *     the text to return if the keyword is "table"
-   * @return the text if the keyword is "table", otherwise an empty string
-   */
-  private String ifIsTable(String keyWord, String text) {
-    if (StringUtils.equalsIgnoreCase(keyWord, "table")) {
-      return text;
+      responseVars.put(ERROR, e.getMessage());
     }
-    return "";
   }
 
 }
diff --git a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterFields.java b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterFields.java
index 3f52219..a4c3109 100644
--- a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterFields.java
+++ b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterFields.java
@@ -6,12 +6,14 @@
 import java.util.List;
 import java.util.Map;
 
+import com.etendoerp.copilot.devassistant.Utils;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.openbravo.dal.service.OBDal;
 import org.openbravo.erpCommon.utility.OBError;
 import org.openbravo.erpCommon.utility.OBMessageUtils;
+import org.openbravo.model.ad.module.Module;
 import org.openbravo.model.ad.ui.Element;
 import org.openbravo.model.ad.ui.Field;
 import org.openbravo.model.ad.ui.Tab;
@@ -35,7 +37,7 @@ public class RegisterFields extends BaseWebhookService {
   /**
    * Processes the incoming webhook request to register fields for the specified window tab.
    * It retrieves the tab ID, help comment, and description from the parameters,
-   * calls the {@link #registerFields(String, String, String)} method to execute the registration process,
+   * calls the registerFields method to execute the registration process,
    * and updates the fields with the specified help comment and description.
    *
    * @param parameter A map containing the input parameters for the request, including the window tab ID, help comment, and description.
@@ -48,8 +50,10 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
       String tabID = parameter.get("WindowTabID");
       String helpComment = parameter.get("HelpComment");
       String description = parameter.get("Description");
+      String dbPrefix = parameter.get("DBPrefix");
 
       Tab tab = OBDal.getInstance().get(Tab.class, tabID);
+      Module module = Utils.getModuleByPrefix(dbPrefix);
 
       if (tab == null) {
         responseVars.put(ERROR_PROPERTY, String.format(OBMessageUtils.messageBD("COPDEV_TabNotFound"), tabID));
@@ -61,6 +65,7 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
 
       // Refresh tab and update fields to show them in Grid view
       OBDal.getInstance().refresh(tab);
+      OBDal.getInstance().refresh(module);
       List<Field> fields = tab.getADFieldList();
       fields.stream()
           .filter(field -> !field.getColumn().isKeyColumn())  // Ignore key columns
@@ -76,9 +81,11 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
             if (StringUtils.isBlank(elementPrinTxt)) {
               elementPrinTxt = field.getColumn().getName();
             }
-            element.setName(StringUtils.replace(elementName, "_", " "));
-            element.setPrintText(StringUtils.replace(elementPrinTxt, "_", " "));
-            OBDal.getInstance().save(element);
+            if (element.getModule().equals(module)) {
+                element.setName(StringUtils.replace(elementName, "_", " "));
+                element.setPrintText(StringUtils.replace(elementPrinTxt, "_", " "));
+                OBDal.getInstance().save(element);
+            }
 
             // Set help comment, description, and show field in grid view
             field.setHelpComment(helpComment);
diff --git a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterTab.java b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterTab.java
index 6a59c1f..02195f5 100644
--- a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterTab.java
+++ b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterTab.java
@@ -9,12 +9,16 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 import org.hibernate.criterion.Restrictions;
+import org.openbravo.base.exception.OBException;
 import org.openbravo.base.provider.OBProvider;
 import org.openbravo.dal.core.OBContext;
 import org.openbravo.dal.service.OBCriteria;
 import org.openbravo.dal.service.OBDal;
 import org.openbravo.erpCommon.utility.OBMessageUtils;
 import org.openbravo.model.ad.datamodel.Table;
+import org.openbravo.model.ad.module.DataPackage;
+import org.openbravo.model.ad.module.Module;
+import org.openbravo.model.ad.module.ModuleDBPrefix;
 import org.openbravo.model.ad.ui.Tab;
 import org.openbravo.model.ad.ui.Window;
 
@@ -64,6 +68,10 @@ public class RegisterTab extends BaseWebhookService {
    * Constant for the default UI pattern
    */
   public static final String STD = "STD";
+  /**
+   * Constant for the DBPrefix parameter
+   */
+  public static final String DB_PREFIX = "DBPrefix";
 
   /**
    * Handles the registration of a new tab for the specified window.
@@ -86,10 +94,15 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
       String helpComment = parameter.get(HELP_COMMENT);
       String tableNae = parameter.get(TABLE_NAME);
       String sequenceNumber = parameter.get(SEQUENCE_NUMBER);
+      String dbPrefix = parameter.get(DB_PREFIX);
 
       // Fetching the table based on the provided TableID
       Table table = Utils.getTableByDBName(tableNae);
 
+      // Retrieve the associated DataPackage
+      Module module = Utils.getModuleByPrefix(dbPrefix);
+      DataPackage dataPackage = Utils.getDataPackage(module);
+
       // Formatting the table name by replacing underscores with spaces
       String name = table.getName().replace("_", " ");
 
@@ -119,11 +132,13 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
       OBContext context = OBContext.getOBContext();
 
       // Fetching the window and setting the table for the window
-      table.setWindow(window);
-      OBDal.getInstance().save(table);
+      if (table.getDataPackage().equals(dataPackage)) {
+        table.setWindow(window);
+        OBDal.getInstance().save(table);
+      }
 
       // Creating and saving the new tab
-      tab = createTab(window, name, table, context, description, helpComment, tabLevel, sequenceNumber);
+      tab = createTab(window, name, table, context, description, helpComment, tabLevel, sequenceNumber, module);
 
       OBDal.getInstance().flush();
 
@@ -161,7 +176,7 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
    * @return the newly created Tab object
    */
   private Tab createTab(Window window, String name, Table table, OBContext context, String description,
-      String helpComment, String tabLevel, String sequenceNumber) {
+      String helpComment, String tabLevel, String sequenceNumber, Module module) {
     Tab tab;
     // Saving the window instance
     OBDal.getInstance().save(window);
@@ -175,7 +190,7 @@ private Tab createTab(Window window, String name, Table table, OBContext context
     tab.setWindow(window);
     tab.setUIPattern(STD);
     tab.setSequenceNumber(Long.parseLong(sequenceNumber));
-    tab.setModule(window.getModule());
+    tab.setModule(module);
     tab.setDescription(description);
     tab.setHelpComment(helpComment);
     tab.setTabLevel(Long.parseLong(tabLevel));
diff --git a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterWindow.java b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterWindow.java
index 05040eb..9254da0 100644
--- a/src/com/etendoerp/copilot/devassistant/webhooks/RegisterWindow.java
+++ b/src/com/etendoerp/copilot/devassistant/webhooks/RegisterWindow.java
@@ -66,9 +66,6 @@ public void get(Map<String, String> parameter, Map<String, String> responseVars)
       // Retrieve the associated DataPackage
       DataPackage dataPackage = getDataPackage(dbPrefix);
 
-      // Normalize the name based on the DB prefix
-      name = fixName(name, dbPrefix);
-
       OBContext context = OBContext.getOBContext();
 
       // Create the window record
@@ -167,26 +164,4 @@ private DataPackage getDataPackage(String dbPrefix) {
     return dataPackList.get(0);
   }
 
-  /**
-   * Fixes the name by removing the DB prefix and formatting it with proper capitalization.
-   *
-   * @param name The name to be fixed.
-   * @param dbPrefix The DB prefix to remove.
-   * @return The formatted name.
-   */
-  public static String fixName(String name, String dbPrefix) {
-    if (StringUtils.startsWith(name, dbPrefix)) {
-      name = StringUtils.removeStart(name, dbPrefix).substring(1);
-    }
-    if (!Character.isUpperCase(name.charAt(0))) {
-      name = StringUtils.capitalize(name);
-    }
-    if (StringUtils.contains(name, "_")) {
-      return Arrays.stream(name.replace("_", " ").split(" "))
-          .map(word -> (StringUtils.isNotBlank(word) ? StringUtils.capitalize(word) : ""))
-          .collect(Collectors.joining(" "));
-    }
-    return name;
-  }
-
 }
